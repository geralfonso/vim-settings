To see information about setting up my terminal in general, peep ./setup

------ALEX NUSSEY's VIM CONFIGURATION--------

I am keeping some of my dot files in the cloud so that I can pull them down when I am working remotely or on someone else's machine

Steps for getting things set up:
1) Clone this repo
2) Modify the paths in the install script so that they point at the folder this doc is in 'vim-settings' and to your home folder
3) Run the script, it will create symlinks, which are functionally identical
4) Modify .vimrc so that the path reflects the path of your home directory, then clone down the vundle repo
4a) git clone https://github.com/gmarik/vundle.git /HOME/.vim/bundle/vundle
5) Open vim, ignore the warnings, and run :BundleInstall


If you make changes: commit them, then
git push origin master


I used this to get the idea:
http://blog.smalleycreative.com/tutorials/using-git-and-github-to-manage-your-dotfiles/

Gist ID for VSCode Settings:
2dc9dbf9bf7ea97770a20c4a1f401e94

-------------------------------------------------------------
----------Things I have learned------------------------------
-------------------------------------------------------------

Terminal tricks
<C-a>: begining of line
<C-e>: end of line
<C-u>: delete everything before this
<C-r>: search command history. Begin typing to search, hit <C-r> again to cycle through
<C-L>: Clear the terminal
<Alt-f>: Jump forward a word
<Alt-b>: Jump backwords a word
<Alt-d>: Delete the word

Vim
<C-n> to autocomplete
<C-w>T move window into a new tab
z* position screen: <CR> is top, - is bottom, . is center
f and t then a character jump to the first occurance of a character in a line. go to the next occurance with ;
u and U to convert highlighted text to lower or upper case respectively. ~ flips case under highlight (F and T are backwards)
a does the same as i, but after instead of before character
e does the same was w, but to the end of the current word instead of the start of the next
m(a-z) is how you set marks. Example: ma sets the a mark. Then '(a-z) takes you to the start of the line or `(a-z) takes you to the exact place
s deletes character and drops in to insert mode
C is change until end of line
D is delete until end of line
S deletes the line and enters insert mode
U restores line to how it was when cursor arrived
V enters selection mode on a line by line basis
J joins the line below to the end of the current one

e, w, and b let other chracters denote words. E, W, and B must have whitespace delimination

https://hea-www.harvard.edu/~fine/Tech/vi.html

Configuring git shortuts
$ git config --global alias.co checkout
$ git config --global alias.br branch
$ git config --global alias.ci commit
$ git config --global alias.st status

git add --patch
git revert --patch

Super useful commands
head and tail show the begining and end of files respectively
-Add a -f flag to follow changes
-If we <C-L> afterwords it will clear the screen showing us just new changes without any bash prompts


for cpu in 1 2; do (while true; do true; done) & done
will peg cores
